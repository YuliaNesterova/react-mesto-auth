{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport function register(password, email) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(res => res.json()).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }) // .then((res) => {\n  //     return res;\n  // })\n  .catch(err => console.log(err));\n}\nexport function authorize(password, email) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      return data;\n    }\n  }).catch(err => console.log(err));\n}\n;\nexport function getUserData(token) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n}","map":{"version":3,"sources":["/Users/yulianesterova/Desktop/dev/react-mesto-auth/src/auth.js"],"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","json","response","status","e","catch","err","console","log","authorize","data","token","localStorage","setItem","getUserData"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,SAASC,QAAT,CAAmBC,QAAnB,EAA6BC,KAA7B,EAAoC;AACvC,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFsB;AAM/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAYP,QADK;AAEjB,eAASC;AAFQ,KAAf;AANyB,GAAvB,CAAL,CAWFO,IAXE,CAWIC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXZ,EAYFF,IAZE,CAYIG,QAAD,IAAc;AAChB,QAAI;AACA,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA4B;AACxB,eAAOD,QAAQ,CAACD,IAAT,EAAP;AACH;AACJ,KAJD,CAIE,OAAMG,CAAN,EAAQ;AACN,aAAQA,CAAR;AACH;AACJ,GApBE,EAqBH;AACA;AACA;AAvBG,GAwBFC,KAxBE,CAwBKC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAxBb,CAAP;AAyBH;AAED,OAAO,SAASG,SAAT,CAAoBlB,QAApB,EAA8BC,KAA9B,EAAqC;AACxC,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFsB;AAM/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAYP,QADK;AAEjB,eAASC;AAFQ,KAAf;AANyB,GAAvB,CAAL,CAWFO,IAXE,CAWIG,QAAQ,IAAIA,QAAQ,CAACD,IAAT,EAXhB,EAYFF,IAZE,CAYIW,IAAD,IAAU;AACZ,QAAIA,IAAI,CAACC,KAAT,EAAe;AACXC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACC,KAAnC;AACA,aAAOD,IAAP;AACH;AACJ,GAjBE,EAkBFL,KAlBE,CAkBIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAlBX,CAAP;AAmBH;AAAA;AAED,OAAO,SAASQ,WAAT,CAAqBH,KAArB,EAA4B;AAC/B,SAAOlB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACjCK,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB,kBAFX;AAGL,uBAAkB,UAASgB,KAAM;AAH5B;AAFwB,GAAzB,CAAL,CAQFZ,IARE,CAQGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARV,EASFF,IATE,CASGW,IAAI,IAAIA,IATX,CAAP;AAUH","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport function register (password, email) {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"password\": password,\n            \"email\": email\n        })\n    })\n        .then((res) => res.json())\n        .then((response) => {\n            try {\n                if (response.status === 200){\n                    return response.json();\n                }\n            } catch(e){\n                return (e)\n            }\n        })\n        // .then((res) => {\n        //     return res;\n        // })\n        .catch((err) => console.log(err));\n}\n\nexport function authorize (password, email) {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"password\": password,\n            \"email\": email\n        })\n    })\n        .then((response => response.json()))\n        .then((data) => {\n            if (data.token){\n                localStorage.setItem('token', data.token);\n                return data;\n            }\n        })\n        .catch(err => console.log(err))\n};\n\nexport function getUserData(token) {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        }\n    })\n        .then(res => res.json())\n        .then(data => data)\n}"]},"metadata":{},"sourceType":"module"}